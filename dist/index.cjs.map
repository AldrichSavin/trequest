{"version":3,"file":"index.cjs","sources":["../lib/PluginEventEmitter.ts","../lib/helpers.ts","../lib/Core.ts","../lib/EventEmitter.ts","../lib/AbstractPlugin.ts","../lib/Plugin.ts"],"sourcesContent":["import { PluginLifecycle, PluginDefine, Plugin } from \"./Plugin\";\nimport { IAbstractPlugin } from \"./AbstractPlugin\";\nimport Core, { MultiServiceBaseURLRecords } from \"./Core\";\nimport { EventProperties } from \"./EventEmitter\";\n\nexport interface PluginEventEmitterType extends Plugin, IAbstractPlugin {}\n\nexport default class PluginEventEmitter extends Set<PluginEventEmitterType> {\n  constructor(private readonly coreContext = {}) {\n    super();\n  }\n\n  public register(\n    plugin: PluginEventEmitterType[] | PluginEventEmitterType\n  ): void {\n    const plugins = Array.isArray(plugin) ? plugin : [plugin];\n    plugins.forEach((plugin) => {\n      this.add(plugin);\n      plugin.onRegister?.(this.coreContext);\n    });\n  }\n\n  public initPluginContext<UserMultiServiceBaseURLRecords = MultiServiceBaseURLRecords>(\n    plugins: PluginEventEmitterType[] | PluginEventEmitterType,\n    core: Core<UserMultiServiceBaseURLRecords, any>\n  ): void {\n    const pluginsArray = Array.isArray(plugins) ? plugins : [plugins];\n    pluginsArray.forEach((plugin) => {\n      plugin.setContext?.(core);\n    });\n    this.run(\"onInit\");\n  }\n\n  public unregister(plugin: PluginEventEmitterType): void {\n    this.delete(plugin);\n  }\n\n  /**\n   * filters plugins by lifecycle\n   *\n   * @param lifecycle PluginLifecycle\n   * @returns Plugin[Lifecycle][]\n   */\n  public filters<Lifecycle extends PluginLifecycle = PluginLifecycle>(\n    lifecycle: Lifecycle\n  ): PluginDefine[Lifecycle][] {\n    return Array.from(this)\n      .map((plugin) => {\n        if (plugin[lifecycle] && typeof plugin[lifecycle] === \"function\") {\n          return plugin[lifecycle]!.bind(plugin);\n        }\n        return undefined;\n      })\n      .filter(Boolean) as PluginDefine[Lifecycle][];\n  }\n\n  /**\n   * @title filters plugins by lifecycle and calls them\n   */\n  run<Lifecycle extends PluginLifecycle = PluginLifecycle>(\n    lifecycle: Lifecycle,\n    ...args: Parameters<PluginDefine[Lifecycle]>\n  ) {\n    const plugins = this.filters<Lifecycle>(lifecycle);\n    plugins.forEach((plugin) => {\n      // @ts-ignore\n      return plugin.apply(plugin, args);\n    });\n  }\n\n  /**\n   * @title filters plugins by lifecycle and calls them asynchronously\n   *\n   * @param lifecycle PluginLifecycle to filter\n   * @param args arguments to pass to the plugins lifecycle method (e.g. onInit)\n   * @returns Promise<ReturnType<PluginDefine[Lifecycle]>[]>\n   */\n  public runAsync<Lifecycle extends PluginLifecycle = PluginLifecycle>(\n    lifecycle: Lifecycle,\n    ...args: Parameters<PluginDefine[Lifecycle]>\n  ): Promise<ReturnType<PluginDefine[Lifecycle]>[]> {\n    const plugins = this.filters<Lifecycle>(lifecycle);\n    return Promise.all(\n      plugins.map((plugin) => {\n        // @ts-ignore\n        return plugin.apply(plugin, args) as Promise<\n          ReturnType<PluginDefine[Lifecycle]>\n        >;\n      })\n    );\n  }\n\n  /**\n   * filters plugins by lifecycle and calls them synchronously\n   */\n  public async runSync<Lifecycle extends PluginLifecycle = PluginLifecycle>(\n    lifecycle: Lifecycle,\n    ...args: Parameters<PluginDefine[Lifecycle]>\n  ) {\n    for (const iterator of this.filters<Lifecycle>(lifecycle)) {\n      // @ts-ignore\n      await iterator.apply(iterator, args);\n    }\n  }\n\n  /**\n   * @title filters plugins by lifecycle and calls them in an onion-like fashion\n   *\n   * @param lifecycle PluginLifecycle to filter\n   * @param args arguments to pass to the plugins lifecycle method (e.g. onInit)\n   * @returns ReturnType<PluginDefine[Lifecycle]> | undefined | void\n   */\n  public runOnion<Lifecycle extends PluginLifecycle = PluginLifecycle>(\n    lifecycle: Lifecycle,\n    ...args: Parameters<PluginDefine[Lifecycle]>\n  ): ReturnType<PluginDefine[Lifecycle]> | undefined | void {\n    const plugins = this.filters<Lifecycle>(lifecycle);\n    return plugins.reduce((prev, plugin) => {\n      // @ts-ignore\n      return plugin.apply(plugin, args) ?? prev;\n    }, undefined);\n  }\n\n  /**\n   * @title filters plugins by lifecycle and calls them in an onion-like fashion asynchronously\n   *\n   * @param lifecycle PluginLifecycle to filter\n   * @param args arguments to pass to the plugins lifecycle method (e.g. onInit)\n   * @returns Promise<ReturnType<PluginDefine[Lifecycle]> | undefined | void>\n   */\n  public runOnionAsync<Lifecycle extends PluginLifecycle = PluginLifecycle>(\n    lifecycle: Lifecycle,\n    ...args: Parameters<PluginDefine[Lifecycle]>\n  ): Promise<ReturnType<PluginDefine[Lifecycle]> | undefined | void> {\n    const plugins = this.filters<Lifecycle>(lifecycle);\n    return plugins.reduce(async (prev, plugin) => {\n      const prevResult = await prev;\n      // @ts-ignore\n      return plugin.apply(plugin, args) ?? prevResult;\n    }, Promise.resolve(undefined));\n  }\n\n  /**\n   * @title Find the plug-in by its name\n   */\n  getPluginByName(pluginName: EventProperties): PluginEventEmitterType | undefined {\n    return Array.from(this).find((plugin) => plugin.name === pluginName);\n  }\n}\n","export const isObject = (value: any): boolean => Object.prototype.toString.call(value) === \"[object Object]\"\nexport const isFunction = (value: any): value is Function => typeof value === 'function';\nexport const isString = (value: any): value is String => typeof value === 'string';","import PluginEventEmitter, {\n  PluginEventEmitterType,\n} from \"./PluginEventEmitter\";\nimport { CreateAxiosDefaults } from \"axios\";\nimport { AxiosInstance } from \"axios\";\nimport axios from \"axios\";\nimport { AxiosRequestConfig } from \"axios\";\nimport { isObject, isString } from \"./helpers\";\nimport { AxiosResponse } from \"axios\";\n\nexport type MultiServiceBaseURLRecords = Record<string, string> & {\n  default?: string;\n};\n\nexport interface CoreConfig<\n  UserMultiServiceBaseURLRecords = MultiServiceBaseURLRecords,\n  D = any\n> extends Omit<CreateAxiosDefaults<D>, \"baseURL\"> {\n  plugins?: PluginEventEmitterType[];\n  instance?: AxiosInstance;\n  baseURL?:\n    | AxiosRequestConfig[\"baseURL\"]\n    | UserMultiServiceBaseURLRecords\n    | keyof UserMultiServiceBaseURLRecords;\n  /**\n   * global loading\n   */\n  loading?: boolean;\n\n  /**\n   * is worker env\n   */\n  worker?: boolean;\n}\n\nexport default class Core<\n  UserMultiServiceBaseURLRecords = MultiServiceBaseURLRecords,\n  D = any\n> extends PluginEventEmitter {\n  private readonly instance: AxiosInstance;\n\n  constructor(\n    private readonly coreConfig: CoreConfig<\n      UserMultiServiceBaseURLRecords,\n      D\n    > = {}\n  ) {\n    super();\n\n    // Mount plugins\n    this.mountPlugins();\n\n    // Init request instance\n    this.instance = axios.create({});\n\n    this.registerRequestInterceptor();\n    this.registerResponseInterceptor();\n  }\n\n  private mountPlugins(): void {\n    const { plugins = [] } = this.coreConfig;\n    this.register(plugins);\n    this.initPluginContext<UserMultiServiceBaseURLRecords>(plugins, this);\n  }\n\n  protected registerRequestInterceptor() {\n    this.instance.interceptors.request.use(\n      async (config: any) => {\n        this.run(\"onRequest\", config);\n        return config;\n      },\n      async (error: any) => {\n        const errors = await this.runOnionAsync(\"onError\", error);\n        this.run(\"onFinally\", errors || error);\n        return Promise.reject(errors || error);\n      }\n    );\n  }\n\n  protected registerResponseInterceptor() {\n    this.instance.interceptors.response.use(async (response: { data: any; }) => {\n        const data = await this.runOnionAsync(\"onResponse\", response);\n        const result = data || response.data;\n        this.run(\"onFinally\", result);\n        return result;\n    }, async (error: any) => {\n        const errors = await this.runOnionAsync(\"onError\", error);\n        this.run(\"onFinally\", error);\n        return Promise.reject(errors || error);\n    })\n  }\n\n  protected isProtocol(url: string): boolean {\n    return /(http|https|ws|wss):\\/\\/([\\w.]+\\/?)\\S*/.test(url);\n  }\n\n  public getBaseURL(\n    baseURL?: AxiosRequestConfig[\"baseURL\"] | string\n  ): AxiosRequestConfig[\"baseURL\"] | string {\n    if (baseURL) {\n      /**\n       * If baseURL is passed during the request and is a valid http/https/ws/wss address,\n       * the passed baseURL is taken as the interface address and the request prefix is not automatically added\n       */\n      if (this.isProtocol(baseURL)) {\n        return baseURL;\n      }\n\n      /**\n       * Due to the internal extension of axios own baseURL attribute,\n       * it is possible to pass an object to baseURL when initializing the instance,\n       * with the corresponding key being any name and the value being the address of the service (e.g., api interface address).\n       *\n       * Therefore, when the estrus request, you can specify the key configured at the initialization of the baseURL,\n       * the internal will be mapped to the corresponding request prefix, and automatically added to the request\n       */\n      if (isObject(this.coreConfig.baseURL)) {\n        return (\n          (this.coreConfig.baseURL as MultiServiceBaseURLRecords)?.[baseURL] ||\n          baseURL\n        );\n      }\n\n      return baseURL;\n    }\n\n    // single service mode\n    if (isString(this.coreConfig.baseURL)) {\n      return this.coreConfig.baseURL;\n    }\n\n    /**\n     * In multiService mode, if the corresponding key cannot be found, try to find default\n     */\n    if (\n      isObject(this.coreConfig.baseURL) &&\n      Reflect.has(\n        (this.coreConfig.baseURL as MultiServiceBaseURLRecords) || {},\n        \"default\"\n      )\n    ) {\n      return Reflect.get(this.coreConfig.baseURL || {}, \"default\");\n    }\n\n    /**\n     * When a developer uses its own axios instance,\n     * it might set baseURL to the defaults property and finally try to look it up in defaults\n     */\n    return this.instance?.defaults?.baseURL || \"\";\n  }\n\n  public request<\n    Data = any,\n    D = any,\n    R extends AxiosResponse<any> = AxiosResponse<Data>\n  >(config: AxiosRequestConfig<D>): Promise<AxiosResponse<Data>> {\n    if (!this.instance?.request) {\n      throw new Error(\"HttpCore instance is not initialized\");\n    }\n    this.runOnionAsync(\"onBeforeRequest\", config);\n    // @ts-ignore\n    return this.instance.request<Data, R, D>(\n      this.mergeConfig(config, {\n        baseURL: this.getBaseURL(config.baseURL),\n      })\n    );\n  }\n\n  protected mergeConfig(\n    config: AxiosRequestConfig,\n    userConfig: AxiosRequestConfig\n  ) {\n    return Object.assign({}, config, userConfig);\n  }\n}\n","export type EventProperties = string | symbol;\nexport type EventListener<T extends any[] = []> = (...args: [...T]) => void;\n\nexport default class EventEmitter extends Map<EventProperties, EventListener> {\n    constructor() {\n        super();\n    }\n\n    on<T extends any[] = []>(event: EventProperties, listener: EventListener<T>): EventEmitter {\n        this.set(event, listener);\n        return this;\n    }\n\n    emit<T extends any[] = []>(event: EventProperties, ...args: [...T]): boolean {\n        const listener = this.get(event);\n        if (listener) {\n            // @ts-ignore\n            listener.apply(this, args);\n            return true;\n        }\n        return false;\n    }\n\n    off(event: EventProperties): EventEmitter {\n        this.delete(event);\n        return this;\n    }\n}\n","import EventEmitter from \"./EventEmitter\";\n\nexport interface IAbstractPlugin {\n    name: string | symbol;\n    version?: string;\n    setContext(context: Record<string | number | symbol, any>): void;\n    getContext(): any;\n}\n\nexport default abstract class AbstractPlugin extends EventEmitter {\n    /**\n     * The runtime context of the plug-in\n     */\n    private _context: {} = {};\n\n    protected constructor() {\n        super();\n    }\n\n    /**\n     * The name of the plug-in\n     */\n    abstract name: string | symbol;\n\n    /**\n     * The version number of the plug-in\n     */\n    protected version?: string;\n\n    /**\n     * This function will be called when the plug-in is registered,\n     * passing the current runtime context to each plug-in so that the plug-in can communicate directly\n     */\n    protected setContext(context: {}): void {\n        this._context = context;\n    }\n\n    /**\n     * You can get the runtime context inside the plugin by modifying the function\n     */\n    protected getContext(): any {\n        return this._context;\n    }\n}\n","export interface PluginDefine {\n    /**\n     * on register plugin\n     */\n    onRegister: (context: any) => any;\n\n    /**\n     * Called after the plug-in has been initialized\n     * You can get the context by this.getContext() and do more (you can customize it)\n     */\n    onInit: () => any;\n\n    /**\n     * Before sending the request (before the request is sent, you can modify the request)\n     */\n    onBeforeRequest: (request: any) => any;\n\n    /**\n     * Between onBeforeRequest and onRequest,\n     * if a mock identity is provided in onMockRequest,\n     * it will respond directly to onResponse as simulated data\n     */\n    onMockRequest: (request: any) => void;\n\n    /**\n     * Send request\n     */\n    onRequest: (request: any) => any;\n\n    // Timeout/Abort/NetworkError/CustomerError/ServerError\n    onError: (error: any) => any;\n\n    /**\n     * Retry request\n     */\n    onRetry: (request: any) => any;\n\n    /**\n     * Cancel request (abort｜CancelToken.cancel)\n     */\n    onCancel: (request: any) => any;\n\n    /**\n     * After receiving the response (you can modify the response)\n     */\n    onResponse: (response: any) => Promise<any> | any;\n\n    /**\n     * after all\n     */\n    onFinally: (response: any) => any;\n\n    /**\n     * destroy\n     */\n    destroy: () => any;\n}\n\nexport interface Plugin extends Partial<PluginDefine> {}\nexport type PluginLifecycle = keyof PluginDefine;\n\nexport default function Plugin() {}\n"],"names":["_settle","pact","state","value","_Pact","s","o","bind","v","observer","prototype","then","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","PluginEventEmitter","_Set","coreContext","call","_inheritsLoose","_proto","register","plugin","_this2","Array","isArray","forEach","add","onRegister","initPluginContext","plugins","core","setContext","run","unregister","filters","lifecycle","from","map","filter","Boolean","_arguments","arguments","apply","slice","runAsync","_arguments2","Promise","all","runSync","_this3","_arguments3","_temp","_forOf","iterator","resolve","reject","runOnion","_arguments4","reduce","prev","_plugin$apply","undefined","runOnionAsync","_arguments5","prevResult","_plugin$apply2","getPluginByName","pluginName","find","name","_wrapNativeSuper","Set","isObject","Object","toString","Core","_PluginEventEmitter","coreConfig","instance","mountPlugins","axios","create","registerRequestInterceptor","registerResponseInterceptor","_this$coreConfig$plug","interceptors","request","use","config","error","errors","_this4","_this5","response","data","isProtocol","url","test","getBaseURL","baseURL","_this$instance","_this$coreConfig$base","Reflect","has","get","defaults","_this$instance2","Error","mergeConfig","userConfig","assign","EventEmitter","_Map","on","event","listener","set","emit","off","Map","_EventEmitter","AbstractPlugin","_context","version","context","getContext"],"mappings":"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"}